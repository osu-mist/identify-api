swagger: '2.0'
info:
  title: Identify API
  description: Get an ONID username of a person.
  version: '0.0'
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/identify-api
basePath: /v1
produces:
  - application/json
paths:
  /identify/osuID:
    get:
      tags:
        - identify
      description: "Get ONID username of a person selected by query parameters."
      operationId: getByOSUID
      parameters:
        - in: query
          name: osuID
          required: true
          description: "9 digit OSU ID"
          type: string
        - $ref: '#/parameters/pretty'
      responses:
        "200":
          description: "Successful response"
          schema:
            $ref: '#/definitions/ResultObject'
        "400":
          description: "Bad request."
          schema:
            $ref: '#/definitions/Errors'
        "404":
          description: "Not found."
          schema:
            $ref: '#/definitions/Error'
  /identify/proxID:
    get:
      tags:
        - identify
      description: "Get ONID username of a person selected by query parameters."
      operationId: getByPROXID
      parameters:
        - in: query
          name: facilityCode
          required: true
          description: "3 character ID card facility code. Must be used wiith cardID parameter."
          type: string
        - in: query
          name: cardID
          required: true
          description: "ID card code. Must be used wiith facilityCode parameter."
          type: string
        - $ref: '#/parameters/pretty'
      responses:
        "200":
          description: "Successful response"
          schema:
            $ref: '#/definitions/ResultObject'
        "400":
          description: "Bad request."
          schema:
            $ref: '#/definitions/Errors'
        "404":
          description: "Not found."
          schema:
            $ref: '#/definitions/Error'
  /identify/getOSUID:
    get:
      tags:
        - identify
      description: "Get 9 digit OSU ID of a person."
      operationId: getOSUID
      parameters:
        - in: query
          name: onid
          required: false
          description: "ONID of a person."
          type: string
        - in: query
          name: osuUID
          required: false
          description: "OSU UID of a person."
          type: string
        - $ref: '#/parameters/pretty'
      responses:
        "200":
          description: "Successful response"
          schema:
            $ref: '#/definitions/OSUIDResponse'
        "400":
          description: "Bad request."
          schema:
            $ref: '#/definitions/Errors'
        "404":
          description: "Not found."
          schema:
            $ref: '#/definitions/Error'

parameters:
  pretty:
    name: pretty
    in: query
    type: boolean
    required: false
    description: If true, JSON response will be pretty-printed

definitions:
  ResultObject:
    properties:
      data:
        $ref: "#/definitions/ResourceObject"
  ResourceObject:
    properties:
      id:
        description: "OSUUID of a person."
        type: string
      type:
        description: "Resource type: person"
        type: string
      attributes:
        $ref: "#/definitions/Attributes"
      links:
        properties:
          self:
            type: string
          related:
            description: "Corresponding self link of person in Directory API"
            type: string
  Attributes:
    properties:
      username:
        description: "ONID of person"
        type: string
      firstName:
        type: string
      lastName:
        type: string
  OSUIDResponse:
    properties:
      data:
        properties:
          id:
            type: string
          type:
            type: string
          attributes:
            properties:
              osuID:
                type: string
  Error:
    type: object
    properties:
      status:
        type: integer
        description: HTTP status code.
      developerMessage:
        type: string
        description: An error string aimed at developers.
      userMesage:
        type: string
        description: An error string aimed at end users.
      code:
        type: integer
        description: Error code.
      details:
        type: string
        description: A link to further information about the error.
  Errors:
    title: ArrayOfErrors
    type: array
    items:
      $ref: "#/definitions/Error"